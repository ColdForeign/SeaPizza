name: Deploy to GitHub Pages

concurrency: 
  group: github-pages
  cancel-in-progress: true

# Run workflow on every push to the master branch
on:
  push:
    branches: [ develop ]
    paths-ignore:
      - '**.md'
    
jobs:
  deploy-to-github-pages:
    # use ubuntu-latest image to run steps on
    runs-on: ubuntu-latest
    environment: github-pages
    steps:
    # uses GitHub's checkout action to checkout code form the master branch
    - uses: actions/checkout@v3
    
    # sets up .NET Core SDK 7
    - name: Setup .NET 7
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 7.0.x
        
    - name: Restore dependencies
      run: dotnet restore
      working-directory: src/Host
      
    - name: Build
      run: dotnet build --no-restore
      working-directory: src/Host
     
    #substitute production appsettings entries to appsettings json file
    - name: App Settings Variable Substitution
      uses: microsoft/variable-substitution@v1
      with:
        files: './src/Host/Configurations/database.json'
      env:
        ConnectionStrings.Default: ${{ secrets.CONNECTION_STRING }}

    #- name: Test
    #  run: dotnet test --no-build --verbosity normal /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura /p:ExcludeByAttribute='ExcludeFromCodeCoverage' /p:SkipAutoProps=true /p:Exclude="[*]Cropper.Blazor.Testing.*"
    #  working-directory: src/Cropper.Blazor/Cropper.Blazor.UnitTests    
      
    #- name: Coverage
    #  uses: codecov/codecov-action@v3.1.1
    #  with:
    #    file: coverage.net6.0.cobertura.xml
    #    fail_ci_if_error: true
    #    verbose: true
        
    # publishes Blazor project to the release-folder
    - name: Publish .NET Core Project
      run: dotnet publish ./src/Host/Host.csproj -c Release --output release --nologo
      
    # changes the base-tag in index.html from '/' to 'Cropper.Blazor' to match GitHub Pages repository subdirectory
    - name: Change base-tag in index.html from / to Cropper.Blazor
      run: sed -i 's/<base href="\/" \/>/<base href="\/Sea.Pizza\/" \/>/g' release/wwwroot/index.html
     
    # copy index.html to 404.html to serve the same file when a file is not found
    - name: copy index.html to 404.html
      run: cp release/wwwroot/index.html release/wwwroot/404.html

    # add .nojekyll file to tell GitHub pages to not treat this as a Jekyll project. (Allow files and folders starting with an underscore)
    - name: Add .nojekyll file
      run: touch release/wwwroot/.nojekyll
      
    - name: Uploading files to gh-pages branch
      uses: JamesIves/github-pages-deploy-action@v4.4.0
      with:
        ssh-key: ${{ secrets.DEPLOY_KEY }}
        branch: gh-pages
        folder: release/wwwroot
